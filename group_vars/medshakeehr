---
# Playbook Vars
user: vagrant
domain: msehr.local

# MedShakeEHR Vars
timezone: "Europe/Paris"
msehrPath: "/home/ehr"

msehr_package: ['acl','composer','curl','ghostscript','git','grub2','imagemagick','ntp','pdftk','python3-openssl','wget']

msehr_base_repo_url: "https://codeload.github.com/MedShake/MedShakeEHR-base/tar.gz/refs/tags/"
# MSEHR version to get
msehr_base_release: "8.0.0"
# sha256 check sum for the getted file (integrity check for the downloaded file)
msehr_base_checksum: "sha256:1f6168627adb1cbe87053d6d48bb87a8c3bcaa9f97744d8bc28c5721c1dc5c42"

# generate the self signed certificate for medshake web access
create_self_signed_cert: true
countryName: FR
localityName: Paris
organizationName: Dr Strange
emailAdress: email@domain.tld

orthancUser: user
orthancPswd: orthancPswd

# dev-sec.os-hardening Vars
os_desktop_enable: false
os_auth_pw_max_age: 9999
# Do not delete the following line or otherwise the playbook will fail
# at task 'create a combined sysctl-dict if overwrites are defined'
sysctl_overwrite:
  # uncomment for VPN
  # net.ipv4.ip_forward: 1

# dev-sec.ssh-hardening Vars
ssh_host_key_files: ['/etc/ssh/ssh_host_ed25519_key']
ssh_authorized_keys_file: ''

# ports on which ssh-server should listen
ssh_server_ports: ['22']            # sshd

# port to which ssh-client should connect
ssh_client_port: '22'               # ssh

# one or more ip addresses, to which ssh-server should listen to. Default is empty, but should be configured for security reasons!
ssh_listen_to: ['0.0.0.0']          # sshd

# Specifies the host key algorithms that the server offers
ssh_host_key_algorithms: []         # sshd

ssh_permit_root_login: without-password

# Vars geerlingguy.firewall
firewall_allowed_tcp_ports:
  - "{{ ssh_server_ports }}"
  - "{{ apache_listen_port }}"
  - "{{ apache_listen_port_ssl }}"
firewall_allowed_udp_ports:
  - "{{ wireguard_port }}"


# jnv.unattended-upgrades Vars
unattended_remove_unused_dependencies: true


# geerlingguy.apache Vars
apache_enablerepo: ""

apache_listen_ip: "*"
apache_listen_port: 80
apache_listen_port_ssl: 443

apache_create_vhosts: true
apache_vhosts_filename: "vhosts.conf"
apache_vhosts_template: "vhosts.conf.j2"

# On Debian/Ubuntu, a default virtualhost is included in Apache's configuration.
# Set this to `true` to remove that default.
apache_remove_default_vhost: true

apache_vhosts:
  # Additional properties:
  # 'serveradmin, serveralias, allow_override, options, extra_parameters'.
  - servername: "{{ domain }}"
    documentroot: "{{ msehrPath }}/public_html/"

apache_vhosts_ssl:
#  Additional properties:
#  'serveradmin, serveralias, allow_override, options, extra_parameters'.
  - servername: "{{ domain }}"
    documentroot: "{{ msehrPath }}/public_html/"
    certificate_file: "/etc/ssl/{{ domain }}/{{ domain }}.pem"
    certificate_key_file: "/etc/ssl/{{ domain }}/{{ domain }}.key"
#   # Optional.
#   certificate_chain_file: "/path/to/certificate_chain.crt"

apache_ignore_missing_ssl_certificate: true

# Only used on Debian/Ubuntu.
apache_mods_enabled:
  - rewrite
  - headers
  - ssl
  - mpm_prefork
  - "php{{ php_version }}"
apache_mods_disabled:
  - mpm_event

# geerlingguy.php_version Vars
php_version: '8.1'

# geerlingguy.php Vars
# Pass in a comma-separated list of repos to use (e.g. "remi,epel"). Used only
# for RHEL/CentOS.
php_enablerepo: ""

php_packages: ['php{{ php_version }}','php{{ php_version }}-bcmath','php{{ php_version }}-curl','php{{ php_version }}-gd','php{{ php_version }}-imagick','php{{ php_version }}-imap','php{{ php_version }}-intl','php{{ php_version }}-mbstring','php{{ php_version }}-mysql','php{{ php_version }}-soap','php{{ php_version }}-xml','php{{ php_version }}-zip']
# Default PHP version to install on Debian-based OSes (OS-specific).
php_default_version_debian: "{{ php_version }}"

# PHP package state; use 'present' to make sure it's installed, or 'latest' if
# you want to upgrade or switch versions using a new repo.
php_packages_state: latest

# Whether to install recommended packages. Used only for Debian/Ubuntu.
php_install_recommends: true

# Set this to false if you're not using PHP with Apache/Nginx/etc.
php_enable_webserver: true

# PHP-FPM configuration.
php_enable_php_fpm: false

# OpCache settings.
php_opcache_zend_extension: "opcache.so"
php_opcache_enable: "0"

# APCu settings.
php_enable_apc: false

# If this is set to false, none of the following options will have any effect.
# Any and all changes to /etc/php.ini will be your responsibility.
php_use_managed_ini: true

php_max_input_vars: "10000"
php_upload_max_filesize: "64M"
php_post_max_size: "32M"
php_date_timezone: "{{ timezone }}"


# geerlingguy.mysql Vars

# Set this to the user ansible is logging in as - should have root
# or sudo access
mysql_user_home: "/home/{{ user }}"
mysql_user_name: "{{ user }}"
mysql_user_password: root

# The default root user installed by mysql - almost always root
mysql_root_home: /root
mysql_root_username: root
mysql_root_password: root

# Set this to `true` to forcibly update the root password.
mysql_root_password_update: false
mysql_user_password_update: false

mysql_enabled_on_startup: true

# Whether my.cnf should be updated on every run.
overwrite_global_mycnf: true

# Pass in a comma-separated list of repos to use (e.g. "remi,epel"). Used only
# for RedHat systems (and derivatives).
mysql_enablerepo: ""


mysql_python_package_debian: python3-mysqldb

# Databases.
mysql_databases:
   - name: medshakeehr
     collation: utf8_general_ci
     encoding: utf8
     replicate: 1

mysql_users:
  - name: medshakeehr
    host: localhost
    # /!\ REPLACE THIS WITH YOUR OWN PASSWORD
    password: secret
    priv: "medshakeehr.*:ALL"

# VPN
# https://github.com/githubixx/ansible-role-wireguard

wireguard_port: "51820"
wireguard_address: 10.9.0.1/32
wireguard_endpoint: "192.168.1.17:{{ wireguard_port }}"
wireguard_preup:
  - echo 1 > /proc/sys/net/ipv4/ip_forward
wireguard_postup:
  - iptables -t nat -A POSTROUTING -o eth1 -j MASQUERADE
  - iptables -A FORWARD -i %i -j ACCEPT
  - iptables -A FORWARD -o %i -j ACCEPT